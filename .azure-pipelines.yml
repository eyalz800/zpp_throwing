trigger:
- main

strategy:
  matrix:
    ubuntu-18.04:
      VM_IMAGE: 'ubuntu-18.04'
      OPERATING_SYSTEM: 'linux'
      CLANG_VERSION: '12'
    ubuntu-20.04:
      VM_IMAGE: 'ubuntu-20.04'
      OPERATING_SYSTEM: 'linux'
      CLANG_VERSION: '12'
    macOS-10.14:
      VM_IMAGE: 'macOS-10.14'
      OPERATING_SYSTEM: 'mac-os'
      CLANG_VERSION: '12'
    macOS-10.15:
      VM_IMAGE: 'macOS-10.15'
      OPERATING_SYSTEM: 'mac-os'
      CLANG_VERSION: '12'

pool:
  vmImage: $(VM_IMAGE)

steps:
- script: |
    curl -fLo llvm.sh https://apt.llvm.org/llvm.sh
    chmod +x ./llvm.sh
    sudo ./llvm.sh $(CLANG_VERSION)
    sudo apt install -y libc++-12-dev libc++abi-$(CLANG_VERSION)-dev libunwind-$(CLANG_VERSION)-dev
    sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-12 1200
  displayName: 'install'
  condition: eq(variables['OPERATING_SYSTEM'], 'linux')

- script: |
    brew install llvm@$(CLANG_VERSION)
  displayName: 'install'
  condition: eq(variables['OPERATING_SYSTEM'], 'mac-os')

- script: |
    export PATH=/usr/local/opt/llvm/bin:$PATH
    make -C test -f zpp.mk -j
  displayName: 'compile-debug'
  condition: eq(variables['OPERATING_SYSTEM'], 'linux')

- script: |
    export PATH=/usr/local/opt/llvm/bin:$PATH
    make -C test -f zpp.mk -j mode=release
  displayName: 'compile-release'

- script: |
    ./test/out/debug/default/output
  displayName: 'test-debug'
  condition: eq(variables['OPERATING_SYSTEM'], 'linux')

- script: |
    ./test/out/release/default/output
  displayName: 'test-release'
